{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './../../App.scss';\nimport './Post.scss';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$phone, _errors$photo;\n\n  let [positions, setPosition] = useState([]);\n  let token = localStorage.getItem('token');\n  useEffect(() => {\n    fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions').then(response => response.json()).then(data => setPosition(data.positions));\n  }, []);\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    reset,\n    handleSubmit\n  } = useForm({\n    mode: 'all'\n  });\n\n  const setUser = async data => {\n    await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n      method: 'POST',\n      headers: {\n        'Token': token\n      },\n      body: JSON.stringify({ ...data,\n        position_id: 3\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post__title title\",\n        children: \"Working with POST request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"post__form\",\n        onSubmit: handleSubmit(setUser),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"  \", (errors === null || errors === void 0 ? void 0 : errors.name) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('name', {\n            required: 'The string must not be empty',\n            minLength: {\n              value: 2,\n              message: 'MinLength 2 elements'\n            },\n            maxLength: {\n              value: 60,\n              message: 'MaxLength 60 elements'\n            }\n          }),\n          name: \"name\",\n          className: \"input__validation\",\n          type: \"name\",\n          placeholder: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('email', {\n            required: 'The string must not be empty',\n            minLength: {\n              value: 2,\n              message: 'MinLength 2 elements'\n            },\n            maxLength: {\n              value: 100,\n              message: 'MaxLength 100 elements'\n            },\n            pattern: {\n              value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n              message: 'Not valid email'\n            }\n          }),\n          name: \"email\",\n          className: \"input__validation\",\n          type: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.phone) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('phone', {\n            required: 'The string must not be empty',\n            pattern: {\n              value: /^[\\+]{0,1}380([0-9]{9})$/,\n              message: 'Not valid phone'\n            }\n          }),\n          className: \"input__validation\",\n          type: \"phone\",\n          placeholder: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"num__example\",\n          children: \"+38 (XXX) XXX - XX - XX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"select__position\",\n          children: \"Select your position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), positions.map(position => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio__item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"radio__btn\",\n              ...register(\"radio\"),\n              type: \"radio\",\n              value: `${position.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio__label\",\n              children: position.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, position.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 31\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.photo) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$photo = errors.photo) === null || _errors$photo === void 0 ? void 0 : _errors$photo.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('photo', {\n            required: 'Please add photo'\n          }),\n          className: \"input__load__file\",\n          type: \"file\",\n          name: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit__btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginBottom: '100px'\n            },\n            className: \"custom__btn\",\n            type: \"submit\",\n            children: \"Sing up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"ceaGXvIJWF7fpD0Yv9TwMHm61s8=\", false, function () {\n  return [useForm];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx"],"names":["React","useEffect","useState","useForm","Post","positions","setPosition","token","localStorage","getItem","fetch","then","response","json","data","register","formState","errors","isValid","reset","handleSubmit","mode","setUser","method","headers","body","JSON","stringify","position_id","name","message","required","minLength","value","maxLength","email","pattern","phone","map","position","id","photo","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './../../App.scss'\nimport './Post.scss'\nimport {useForm} from \"react-hook-form\";\n\nconst Post = () => {\n\n   let [positions, setPosition] = useState([])\n    let token = localStorage.getItem('token')\n    useEffect(() => {\n        fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions')\n            .then(response => response.json())\n            .then( data => setPosition(data.positions))\n    },[])\n\n    const {\n        register,\n        formState: {\n            errors,\n            isValid\n        },\n        reset,\n        handleSubmit\n    } = useForm({\n        mode: 'all'\n    })\n\n\n\n    const setUser = async (data) => {\n      await fetch( `https://frontend-test-assignment-api.abz.agency/api/v1/users`,{\n          method: 'POST',\n          headers: {\n             'Token': token\n          },\n          body: JSON.stringify({...data, position_id: 3})\n      })\n    }\n    return (\n        <section className='post__section'>\n            <div className='container'>\n                <h1 className='post__title title'>Working with POST request</h1>\n                <form className='post__form' onSubmit={handleSubmit(setUser)}>\n                    <div className='error'>  {errors?.name && <p className='not__valid__input'>{errors?.name?.message}</p>}</div>\n                    <input\n                        {...register('name', {\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 60,\n                                message: 'MaxLength 60 elements'\n                            }})}\n                        name='name'\n                        className='input__validation'\n                        type='name'\n                        placeholder='Your name'\n                    />\n                    <div className='error'>{errors?.email && <p className='not__valid__input'>{errors?.email?.message}</p>}</div>\n                    <input\n                        {...register('email', {\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 100,\n                                message: 'MaxLength 100 elements'\n                            },\n                            pattern: {\n                                value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                                message: 'Not valid email'\n                            }\n                        })}\n                        name='email'\n                        className='input__validation'\n                        type='email'\n                        placeholder='Email'\n                    />\n                    <div className='error'>{errors?.phone && <p className='not__valid__input'>{errors?.phone?.message}</p>}</div>\n                    <input\n                        {...register('phone', {\n                            required: 'The string must not be empty',\n                            pattern: {\n                                value: /^[\\+]{0,1}380([0-9]{9})$/,\n                                message: 'Not valid phone'\n                            }\n                        })}\n                        className='input__validation'\n                        type='phone'\n                        placeholder='Phone'\n                    />\n                    <p className='num__example'>+38 (XXX) XXX - XX - XX</p>\n                    <p className='select__position'>Select your position</p>\n                    {positions.map((position) => {\n                    return    <div className='radio__item' key={position.id}>\n                            <input className='radio__btn' {...register(\"radio\")} type=\"radio\" value={`${position.name}`}/>\n                            <label className='radio__label'>{position.name}</label>\n                        </div>\n                    })}\n                        <div className='error'>{errors?.photo && <p className='not__valid__input'>{errors?.photo?.message}</p>}</div>\n                        <input\n                            {...register('photo', {\n                                required: 'Please add photo'\n                            })}\n                            className='input__load__file' type='file' name='photo'/>\n                    <div className='submit__btn'>\n                        <button style={{marginBottom: '100px'}} className='custom__btn' type='submit'>Sing up</button>\n                    </div>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}