{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/users/users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CircularProgress } from '@mui/material';\nimport './../../App.scss';\nimport './users.scss';\nimport MyButton from '../UI/myButton';\nimport apiRequests from '../../api/apiRequests';\nimport User from \"./user/user\";\nimport UserProfile from \"./openUser/userProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  let [showBtn, setShowBtn] = useState(true);\n  let [user, setUser] = useState({});\n  let [userOpen, setUserOpen] = useState(false);\n\n  const getUsers = async pageNum => {\n    props.setLoader(true);\n    await apiRequests.getUsers(pageNum).then(data => {\n      props.setUsers(props.users.concat(data.users));\n      props.setPageNum(prev => prev + 1);\n      if (pageNum === data.total_pages) setShowBtn(false);\n      props.setLoader(false);\n    }).catch(e => console.log(e));\n  };\n\n  const openUser = async userId => {\n    try {\n      const user = await apiRequests.getUser(userId);\n      setUser(user.user);\n      setUserOpen(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getUsers(props.pageNum).catch(e => console.log(e));\n  }, []); // if (userOpen) {\n  //     return <UserProfile userOpen={userOpen} setUserOpen={setUserOpen} user={user}/>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"users\",\n    className: \"users__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users__container container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"users__title title\",\n        children: \"Working with GET request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), userOpen ? /*#__PURE__*/_jsxDEV(UserProfile, {\n        userOpen: userOpen,\n        setUserOpen: setUserOpen,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users__cards\",\n          children: props.users.map(user => {\n            return /*#__PURE__*/_jsxDEV(User, {\n              openUser: openUser,\n              user: user\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), showBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"show-btn__container\",\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            onClick: () => getUsers(props.pageNum),\n            disabled: props.loader,\n            children: \"Show more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loader\",\n            children: props.loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              sx: {\n                width: '10px',\n                height: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this) : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 31\n        }, this) : null]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"vA7Do119Avk6Y9PqBSdHP54oHjg=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/users/users.jsx"],"names":["React","useEffect","useState","CircularProgress","MyButton","apiRequests","User","UserProfile","Users","props","showBtn","setShowBtn","user","setUser","userOpen","setUserOpen","getUsers","pageNum","setLoader","then","data","setUsers","users","concat","setPageNum","prev","total_pages","catch","e","console","log","openUser","userId","getUser","map","id","loader","width","height"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {CircularProgress} from '@mui/material';\nimport './../../App.scss';\nimport './users.scss';\nimport MyButton from '../UI/myButton';\nimport apiRequests from '../../api/apiRequests';\nimport User from \"./user/user\";\nimport UserProfile from \"./openUser/userProfile\";\n\n\nconst Users = (props) => {\n\n    let [showBtn, setShowBtn] = useState(true);\n    let [user, setUser] = useState({})\n    let [userOpen, setUserOpen] = useState(false);\n\n\n    const getUsers = async (pageNum) => {\n        props.setLoader(true);\n        await apiRequests.getUsers(pageNum)\n            .then(data => {\n                props.setUsers(props.users.concat(data.users));\n                props.setPageNum((prev) => prev + 1);\n                if (pageNum === data.total_pages) setShowBtn(false);\n                props.setLoader(false);\n            })\n            .catch(e => console.log(e));\n    }\n\n    const openUser = async (userId) => {\n        try {\n            const user = await apiRequests.getUser(userId)\n            setUser(user.user)\n            setUserOpen(true)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        getUsers(props.pageNum)\n            .catch(e => console.log(e));\n    }, []);\n\n    // if (userOpen) {\n    //     return <UserProfile userOpen={userOpen} setUserOpen={setUserOpen} user={user}/>\n    // }\n\n\n    return (\n        <section id='users' className='users__section'>\n            <div className='users__container container'>\n                <h1 className='users__title title'>Working with GET request</h1>\n                {userOpen\n                    ? <UserProfile userOpen={userOpen} setUserOpen={setUserOpen} user={user}/>\n                    : <>\n                        <div className='users__cards'>\n                            {props.users.map((user) => {\n                                return <User openUser={openUser} key={user.id} user={user}/>\n                            })}\n                        </div>\n                        {showBtn\n                            ? <div className='show-btn__container'>\n                                <MyButton onClick={() => getUsers(props.pageNum)} disabled={props.loader}>\n                                    Show more\n                                </MyButton>\n\n                                <span className='loader'>\n                {props.loader ? <CircularProgress sx={{width: '10px', height: '10px'}}/> : ''}\n                    </span>\n                            </div>\n                            : null}\n                    </>}\n            </div>\n        </section>\n    );\n};\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}