{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/get-block/Get.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './../../App.scss';\nimport './Get.scss';\nimport MyButton from \"../UI/MyButton\";\nimport { CircularProgress, Tooltip } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Get = () => {\n  _s();\n\n  let [pageNum, setPageNum] = useState(1);\n  let [users, setUsers] = useState([]);\n  let [showBtn, setShowBtn] = useState(true);\n  let [loader, setLoader] = useState(false);\n\n  const getUsers = async pageNum => {\n    setLoader(true);\n    await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users?page=${pageNum}&count=6`).then(response => response.json()).then(data => {\n      setUsers(users.concat(data.users));\n      setPageNum(prev => prev + 1);\n      if (pageNum === data.total_pages) setShowBtn(false);\n      setLoader(false);\n    }).catch(e => console.log(e));\n  };\n\n  useEffect(() => {\n    getUsers(pageNum);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"get__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"get__container container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"get__title title\",\n        children: \" Working with GET request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users__cards\",\n        children: users.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user__card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body__card\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"avatar\",\n                src: user.photo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position\",\n                children: user.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                arrow: true,\n                title: user.email,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"email\",\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"phone\",\n                children: user.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => getUsers(pageNum),\n          children: \"Show more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            position: 'absolute',\n            marginLeft: '10px'\n          },\n          children: loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 91\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Get, \"l+8KQbyOpdQkKOYKFOCE8wnoXW4=\");\n\n_c = Get;\nexport default Get;\n\nvar _c;\n\n$RefreshReg$(_c, \"Get\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/get-block/Get.jsx"],"names":["React","useEffect","useState","MyButton","CircularProgress","Tooltip","Get","pageNum","setPageNum","users","setUsers","showBtn","setShowBtn","loader","setLoader","getUsers","fetch","then","response","json","data","concat","prev","total_pages","catch","e","console","log","map","user","photo","name","position","email","phone","id","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './../../App.scss'\nimport './Get.scss'\nimport MyButton from \"../UI/MyButton\";\nimport {CircularProgress, Tooltip} from \"@mui/material\";\n\nconst Get = () => {\n\n    let [pageNum, setPageNum] = useState(1)\n    let [users, setUsers] = useState([])\n    let [showBtn, setShowBtn] = useState(true)\n    let [loader, setLoader] = useState(false)\n\n    const getUsers = async (pageNum) => {\n        setLoader(true)\n        await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users?page=${pageNum}&count=6`)\n           .then((response) => response.json())\n           .then(data => {\n               setUsers(users.concat(data.users))\n               setPageNum((prev) => prev + 1)\n               if (pageNum === data.total_pages) setShowBtn(false)\n               setLoader(false)\n           })\n           .catch(e => console.log(e))\n    }\n\n    useEffect( () =>  {\n        getUsers(pageNum)\n    }, [])\n\n    return (\n        <section className='get__section'>\n            <div className='get__container container'>\n            <h1 className='get__title title'> Working with GET request</h1>\n            <div className='users__cards'>\n                {users.map((user) => {\n                    return <div key={user.id} className='user__card'>\n                        <div className='body__card'>\n                          <img className='avatar' src={user.photo}/>\n                            <div className='name'>{user.name}</div>\n                            <div className='position'>{user.position}</div>\n                            <Tooltip  arrow     title={user.email}>\n                            <div className='email'>{user.email}</div>\n                            </Tooltip>\n                            <div className='phone'>{user.phone}</div>\n                        </div>\n                    </div>\n                })}\n            </div>\n                <div>\n            <MyButton\n                onClick={() => getUsers(pageNum)}\n            >\n                Show more\n            </MyButton><span style={{position: 'absolute', marginLeft: '10px'}}>{loader ? <CircularProgress /> : ''}</span>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Get;"]},"metadata":{},"sourceType":"module"}