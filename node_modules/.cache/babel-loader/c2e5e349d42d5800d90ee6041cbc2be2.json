{"ast":null,"code":"/*!\n * bsCustomFileInput v1.3.4 (https://github.com/Johann-S/bs-custom-file-input)\n * Copyright 2018 - 2020 Johann-S <johann.servoire@gmail.com>\n * Licensed under MIT (https://github.com/Johann-S/bs-custom-file-input/blob/master/LICENSE)\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.bsCustomFileInput = factory());\n})(this, function () {\n  'use strict';\n\n  var Selector = {\n    CUSTOMFILE: '.custom-file input[type=\"file\"]',\n    CUSTOMFILELABEL: '.custom-file-label',\n    FORM: 'form',\n    INPUT: 'input'\n  };\n  var textNodeType = 3;\n\n  var getDefaultText = function getDefaultText(input) {\n    var defaultText = '';\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      defaultText = label.textContent;\n    }\n\n    return defaultText;\n  };\n\n  var findFirstChildNode = function findFirstChildNode(element) {\n    if (element.childNodes.length > 0) {\n      var childNodes = [].slice.call(element.childNodes);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var node = childNodes[i];\n\n        if (node.nodeType !== textNodeType) {\n          return node;\n        }\n      }\n    }\n\n    return element;\n  };\n\n  var restoreDefaultText = function restoreDefaultText(input) {\n    var defaultText = input.bsCustomFileInput.defaultText;\n    var label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      element.textContent = defaultText;\n    }\n  };\n\n  var fileApi = !!window.File;\n  var FAKE_PATH = 'fakepath';\n  var FAKE_PATH_SEPARATOR = '\\\\';\n\n  var getSelectedFiles = function getSelectedFiles(input) {\n    if (input.hasAttribute('multiple') && fileApi) {\n      return [].slice.call(input.files).map(function (file) {\n        return file.name;\n      }).join(', ');\n    }\n\n    if (input.value.indexOf(FAKE_PATH) !== -1) {\n      var splittedValue = input.value.split(FAKE_PATH_SEPARATOR);\n      return splittedValue[splittedValue.length - 1];\n    }\n\n    return input.value;\n  };\n\n  function handleInputChange() {\n    var label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL);\n\n    if (label) {\n      var element = findFirstChildNode(label);\n      var inputValue = getSelectedFiles(this);\n\n      if (inputValue.length) {\n        element.textContent = inputValue;\n      } else {\n        restoreDefaultText(this);\n      }\n    }\n  }\n\n  function handleFormReset() {\n    var customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT)).filter(function (input) {\n      return !!input.bsCustomFileInput;\n    });\n\n    for (var i = 0, len = customFileList.length; i < len; i++) {\n      restoreDefaultText(customFileList[i]);\n    }\n  }\n\n  var customProperty = 'bsCustomFileInput';\n  var Event = {\n    FORMRESET: 'reset',\n    INPUTCHANGE: 'change'\n  };\n  var bsCustomFileInput = {\n    init: function init(inputSelector, formSelector) {\n      if (inputSelector === void 0) {\n        inputSelector = Selector.CUSTOMFILE;\n      }\n\n      if (formSelector === void 0) {\n        formSelector = Selector.FORM;\n      }\n\n      var customFileInputList = [].slice.call(document.querySelectorAll(inputSelector));\n      var formList = [].slice.call(document.querySelectorAll(formSelector));\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        Object.defineProperty(input, customProperty, {\n          value: {\n            defaultText: getDefaultText(input)\n          },\n          writable: true\n        });\n        handleInputChange.call(input);\n        input.addEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i = 0, _len = formList.length; _i < _len; _i++) {\n        formList[_i].addEventListener(Event.FORMRESET, handleFormReset);\n\n        Object.defineProperty(formList[_i], customProperty, {\n          value: true,\n          writable: true\n        });\n      }\n    },\n    destroy: function destroy() {\n      var formList = [].slice.call(document.querySelectorAll(Selector.FORM)).filter(function (form) {\n        return !!form.bsCustomFileInput;\n      });\n      var customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT)).filter(function (input) {\n        return !!input.bsCustomFileInput;\n      });\n\n      for (var i = 0, len = customFileInputList.length; i < len; i++) {\n        var input = customFileInputList[i];\n        restoreDefaultText(input);\n        input[customProperty] = undefined;\n        input.removeEventListener(Event.INPUTCHANGE, handleInputChange);\n      }\n\n      for (var _i2 = 0, _len2 = formList.length; _i2 < _len2; _i2++) {\n        formList[_i2].removeEventListener(Event.FORMRESET, handleFormReset);\n\n        formList[_i2][customProperty] = undefined;\n      }\n    }\n  };\n  return bsCustomFileInput;\n});","map":{"version":3,"mappings":"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","names":["Selector","CUSTOMFILE","CUSTOMFILELABEL","FORM","INPUT","textNodeType","getDefaultText","input","defaultText","label","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","length","slice","call","i","node","nodeType","restoreDefaultText","bsCustomFileInput","fileApi","window","File","FAKE_PATH","FAKE_PATH_SEPARATOR","getSelectedFiles","hasAttribute","files","map","file","name","join","value","indexOf","splittedValue","split","handleInputChange","inputValue","handleFormReset","customFileList","querySelectorAll","filter","len","customProperty","Event","FORMRESET","INPUTCHANGE","init","inputSelector","formSelector","customFileInputList","document","formList","Object","defineProperty","writable","addEventListener","destroy","form","undefined","removeEventListener"],"sources":["/Users/user/WebstormProjects/resume-test-project/node_modules/bs-custom-file-input/src/selector.js","/Users/user/WebstormProjects/resume-test-project/node_modules/bs-custom-file-input/src/util.js","/Users/user/WebstormProjects/resume-test-project/node_modules/bs-custom-file-input/src/eventHandlers.js","/Users/user/WebstormProjects/resume-test-project/node_modules/bs-custom-file-input/src/index.js"],"sourcesContent":["const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"]},"metadata":{},"sourceType":"script"}