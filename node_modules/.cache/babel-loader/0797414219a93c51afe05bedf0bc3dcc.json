{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/users/users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CircularProgress, Tooltip } from '@mui/material';\nimport './../../App.scss';\nimport './users.scss';\nimport MyButton from '../UI/myButton';\nimport apiRequests from '../../api/apiRequests';\nimport User from \"./user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  let [showBtn, setShowBtn] = useState(true);\n\n  const sliceText = str => {\n    if (str.length > 20) return str.slice(0, 20) + '...';\n    return str;\n  };\n\n  const getUsers = async pageNum => {\n    props.setLoader(true);\n    await apiRequests.getUsers(pageNum).then(data => {\n      props.setUsers(props.users.concat(data.users));\n      props.setPageNum(prev => prev + 1);\n      if (pageNum === data.total_pages) setShowBtn(false);\n      props.setLoader(false);\n    }).catch(e => console.log(e));\n  };\n\n  useEffect(() => {\n    getUsers(props.pageNum).catch(e => console.log(e));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"users\",\n    className: \"users__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users__container container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"users__title title\",\n        children: \"Working with GET request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users__cards\",\n        children: props.users.map(user => {\n          let name = sliceText(user.name);\n          let email = sliceText(user.email);\n          return /*#__PURE__*/_jsxDEV(User, {\n            user: user,\n            name: name,\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this); // return <div key={user.id} className='user__card'>\n          //     <div className='body__card'>\n          //         <img className='avatar' src={user.photo}/>\n          //         <Tooltip title={user.name}>\n          //             <div className='name'>{name}</div>\n          //         </Tooltip>\n          //         <div className='position'>{user.position}</div>\n          //         <Tooltip arrow title={user.email}>\n          //             <div className='email'>{email}</div>\n          //         </Tooltip>\n          //         <div className='phone'>{user.phone}</div>\n          //     </div>\n          // </div>\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), showBtn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"show-btn__container\",\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          onClick: () => getUsers(props.pageNum),\n          disabled: props.loader,\n          children: \"Show more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader\",\n          children: props.loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              width: '10px',\n              height: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 41\n          }, this) : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"qYuGI4Axr8SruxOBm4I3157dE5Q=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/users/users.jsx"],"names":["React","useEffect","useState","CircularProgress","Tooltip","MyButton","apiRequests","User","Users","props","showBtn","setShowBtn","sliceText","str","length","slice","getUsers","pageNum","setLoader","then","data","setUsers","users","concat","setPageNum","prev","total_pages","catch","e","console","log","map","user","name","email","loader","width","height"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {CircularProgress, Tooltip} from '@mui/material';\nimport './../../App.scss';\nimport './users.scss';\nimport MyButton from '../UI/myButton';\nimport apiRequests from '../../api/apiRequests';\nimport User from \"./user\";\n\nconst Users = (props) => {\n\n    let [showBtn, setShowBtn] = useState(true);\n\n    const sliceText = (str) => {\n        if (str.length > 20) return str.slice(0, 20) + '...';\n        return str;\n    };\n    const getUsers = async (pageNum) => {\n        props.setLoader(true);\n        await apiRequests.getUsers(pageNum)\n            .then(data => {\n                props.setUsers(props.users.concat(data.users));\n                props.setPageNum((prev) => prev + 1);\n                if (pageNum === data.total_pages) setShowBtn(false);\n                props.setLoader(false);\n            })\n            .catch(e => console.log(e));\n    }\n\n    useEffect(() => {\n        getUsers(props.pageNum)\n            .catch(e => console.log(e));\n    }, []);\n\n\n    return (\n        <section id='users' className='users__section'>\n            <div className='users__container container'>\n                <h1 className='users__title title'>Working with GET request</h1>\n                <div className='users__cards'>\n                    {props.users.map((user) => {\n                        let name = sliceText(user.name);\n                        let email = sliceText(user.email);\n                        return <User user={user} name={name} email={email}/>\n\n\n                        // return <div key={user.id} className='user__card'>\n                        //     <div className='body__card'>\n                        //         <img className='avatar' src={user.photo}/>\n                        //         <Tooltip title={user.name}>\n                        //             <div className='name'>{name}</div>\n                        //         </Tooltip>\n                        //         <div className='position'>{user.position}</div>\n                        //         <Tooltip arrow title={user.email}>\n                        //             <div className='email'>{email}</div>\n                        //         </Tooltip>\n                        //         <div className='phone'>{user.phone}</div>\n                        //     </div>\n                        // </div>\n                    })}\n                </div>\n                {showBtn\n                    ? <div className='show-btn__container'>\n                        <MyButton\n                            onClick={() => getUsers(props.pageNum)}\n                            disabled={props.loader}\n                        >\n                            Show more\n                        </MyButton>\n\n                        <span className='loader'>\n                        {props.loader ? <CircularProgress sx={{width: '10px', height: '10px'}}/> : ''}\n                    </span>\n                    </div>\n                    : null}\n            </div>\n        </section>\n    );\n};\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}