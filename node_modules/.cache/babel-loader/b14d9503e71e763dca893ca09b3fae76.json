{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './../../App.scss';\nimport './Post.scss';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  var _errors$name, _errors$email, _errors$phone, _errors$photo;\n\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    reset,\n    handleSubmit\n  } = useForm({\n    mode: 'all'\n  });\n  let [positions, setPosition] = useState([]);\n  let token = localStorage.getItem('token');\n  useEffect(() => {\n    fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions').then(response => response.json()).then(data => setPosition(data.positions));\n  }, []);\n  const form = useRef(null);\n\n  const setUser = async () => {\n    const data = new FormData(form.current);\n    await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n      method: 'POST',\n      headers: {\n        'Token': token\n      },\n      body: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post__title title\",\n        children: \"Working with POST request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"post__form\",\n        ref: form,\n        onSubmit: handleSubmit(setUser),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [\"  \", (errors === null || errors === void 0 ? void 0 : errors.name) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('name', {\n            required: 'The string must not be empty',\n            minLength: {\n              value: 2,\n              message: 'MinLength 2 elements'\n            },\n            maxLength: {\n              value: 60,\n              message: 'MaxLength 60 elements'\n            }\n          }),\n          name: \"name\",\n          className: \"input__validation\",\n          type: \"name\",\n          placeholder: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('email', {\n            required: 'The string must not be empty',\n            minLength: {\n              value: 2,\n              message: 'MinLength 2 elements'\n            },\n            maxLength: {\n              value: 100,\n              message: 'MaxLength 100 elements'\n            },\n            pattern: {\n              value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n              message: 'Not valid email'\n            }\n          }),\n          name: \"email\",\n          className: \"input__validation\",\n          type: \"email\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.phone) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('phone', {\n            required: 'The string must not be empty',\n            pattern: {\n              value: /^[\\+]{0,1}380([0-9]{9})$/,\n              message: 'Not valid phone'\n            }\n          }),\n          className: \"input__validation\",\n          type: \"phone\",\n          placeholder: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"num__example\",\n          children: \"+38 (XXX) XXX - XX - XX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"select__position\",\n          children: \"Select your position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), positions.map(position => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio__item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"position_id\",\n              className: \"radio__btn\",\n              ...register(\"radio\"),\n              type: \"radio\",\n              value: `${position.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"radio__label\",\n              children: position.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, position.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 31\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: (errors === null || errors === void 0 ? void 0 : errors.photo) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"not__valid__input\",\n            children: errors === null || errors === void 0 ? void 0 : (_errors$photo = errors.photo) === null || _errors$photo === void 0 ? void 0 : _errors$photo.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('photo', {\n            required: 'Please add photo'\n          }),\n          className: \"input__load__file\",\n          type: \"file\",\n          name: \"photo\",\n          accept: \".jpg, .jpeg, .png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit__btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginBottom: '100px'\n            },\n            className: \"custom__btn\",\n            type: \"submit\",\n            children: \"Sing up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"22S60MWpCT37VfJZPDJ7PwLJN9Y=\", false, function () {\n  return [useForm];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx"],"names":["React","useEffect","useRef","useState","useForm","Post","register","formState","errors","isValid","reset","handleSubmit","mode","positions","setPosition","token","localStorage","getItem","fetch","then","response","json","data","form","setUser","FormData","current","method","headers","body","name","message","required","minLength","value","maxLength","email","pattern","phone","map","position","id","photo","marginBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './../../App.scss'\nimport './Post.scss'\nimport {useForm} from \"react-hook-form\";\n\nconst Post = () => {\n    const {register, formState: {errors, isValid}, reset, handleSubmit} = useForm({mode: 'all'})\n    let [positions, setPosition] = useState([])\n    let token = localStorage.getItem('token')\n\n    useEffect( () => {\n      fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions')\n            .then(response => response.json())\n            .then(data => setPosition(data.positions))\n    }, [])\n\n    const form = useRef(null)\n\n    const setUser = async () => {\n        const data = new FormData(form.current)\n        await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n            method: 'POST',\n            headers: {\n                'Token': token\n            },\n            body: data\n\n        })\n    }\n\n    return (\n        <section className='post__section'>\n            <div className='container'>\n                <h1 className='post__title title'>Working with POST request</h1>\n                <form className='post__form' ref={form} onSubmit={handleSubmit(setUser)}>\n                    <div className='error'>  {errors?.name && <p className='not__valid__input'>{errors?.name?.message}</p>}</div>\n                    <input\n                        {...register('name', {\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 60,\n                                message: 'MaxLength 60 elements'\n                            }})}\n                        name='name'\n                        className='input__validation'\n                        type='name'\n                        placeholder='Your name'\n                    />\n                    <div className='error'>{errors?.email && <p className='not__valid__input'>{errors?.email?.message}</p>}</div>\n                    <input\n                        {...register('email', {\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 100,\n                                message: 'MaxLength 100 elements'\n                            },\n                            pattern: {\n                                value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                                message: 'Not valid email'\n                            }\n                        })}\n                        name='email'\n                        className='input__validation'\n                        type='email'\n                        placeholder='Email'\n                    />\n                    <div className='error'>{errors?.phone && <p className='not__valid__input'>{errors?.phone?.message}</p>}</div>\n                    <input\n                        {...register('phone', {\n                            required: 'The string must not be empty',\n                            pattern: {\n                                value: /^[\\+]{0,1}380([0-9]{9})$/,\n                                message: 'Not valid phone'\n                            }\n                        })}\n                        className='input__validation'\n                        type='phone'\n                        placeholder='Phone'\n                    />\n                    <p className='num__example'>+38 (XXX) XXX - XX - XX</p>\n                    <p className='select__position'>Select your position</p>\n                    {positions.map((position) => {\n                    return    <div className='radio__item' key={position.id} >\n                            <input name='position_id' className='radio__btn' {...register(\"radio\")} type=\"radio\" value={`${position.name}`}/>\n                            <label className='radio__label'>{position.name}</label>\n                        </div>\n                    })}\n                        <div className='error'>{errors?.photo && <p className='not__valid__input'>{errors?.photo?.message}</p>}</div>\n                        <input\n                            {...register('photo', {\n                                required: 'Please add photo'\n                            })}\n                            className='input__load__file' type='file' name='photo'  accept=\".jpg, .jpeg, .png\"/>\n                    <div className='submit__btn'>\n                        <button style={{marginBottom: '100px'}} className='custom__btn' type='submit'>Sing up</button>\n                    </div>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}