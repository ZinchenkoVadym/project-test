{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './../../App.scss';\nimport './Post.scss';\nimport { useForm } from \"react-hook-form\";\nimport MyButton from \"../UI/MyButton/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  var _errors$name, _errors$email;\n\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    reset,\n    handleSubmit\n  } = useForm({\n    mode: 'all'\n  });\n\n  const onSubmit = data => {\n    console.log(JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post__section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"post__title title\",\n      children: \"Working with POST request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post__form\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"  \", (errors === null || errors === void 0 ? void 0 : errors.name) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"not__valid__input\",\n          children: errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('name', {\n          required: 'The string must not be empty',\n          minLength: {\n            value: 2,\n            message: 'MinLength 2 elements'\n          },\n          maxLength: {\n            value: 12,\n            message: 'MaxLength 12 elements'\n          },\n          pattern: {\n            value: /^([а-яёА-ЯË]{1,23}|[a-zA-Z]{1,12})$/,\n            message: 'Name must contain only liters'\n          }\n        }),\n        name: \"name\",\n        className: \"input__validation\",\n        type: \"name\",\n        placeholder: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [\"  \", (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"not__valid__input\",\n          children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register('email', {\n          required: 'The string must not be empty',\n          pattern: {\n            value: /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n            message: 'Not valid email'\n          }\n        }),\n        name: \"email\",\n        className: \"input__validation\",\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), \"^\\\\+[0-9]\", 3, \"\\\\s\\\\((\\\\d+)\\\\)\\\\d\", 3, \"\\\\d\", 2, \"\\\\d\", 2, /*#__PURE__*/_jsxDEV(\"input\", { ...register('phone', {\n          required: 'The string must not be empty',\n          pattern: {\n            value: /^\\+[0-9]{3}\\s\\((\\d+)\\)\\d{3}\\d{2}\\d{2}/g,\n            message: 'Not valid phone'\n          }\n        }),\n        className: \"input__validation\",\n        type: \"phone\",\n        placeholder: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"num__example\",\n        children: \"+38 (XXX) XXX - XX - XX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"select__position\",\n        children: \"Select your position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio__btn\",\n          ...register(\"radio\"),\n          type: \"radio\",\n          value: \"Frontend developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio__label\",\n          children: \"Frontend developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio__btn\",\n          ...register(\"radio\"),\n          type: \"radio\",\n          value: \"Backend developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio__label\",\n          children: \"Frontend developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio__btn\",\n          ...register(\"radio\"),\n          type: \"radio\",\n          value: \"Designer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio__label\",\n          children: \"Designer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio__btn\",\n          ...register(\"radio\"),\n          type: \"radio\",\n          value: \"QA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio__label\",\n          children: \"QA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input__validation\",\n        type: \"file\",\n        name: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"k3nK2/Ig201Nxxb+ryWYYVXo0pw=\", false, function () {\n  return [useForm];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx"],"names":["React","useForm","MyButton","Post","register","formState","errors","isValid","reset","handleSubmit","mode","onSubmit","data","console","log","JSON","stringify","name","message","required","minLength","value","maxLength","pattern","email"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './../../App.scss'\nimport './Post.scss'\nimport {useForm} from \"react-hook-form\";\nimport MyButton from \"../UI/MyButton/MyButton\";\n\nconst Post = () => {\n    const {\n        register,\n        formState: {\n            errors,\n            isValid\n        },\n        reset,\n        handleSubmit\n    } = useForm({\n        mode: 'all'\n    })\n\n    const onSubmit = (data) => {\n        console.log(JSON.stringify(data))\n    }\n    return (\n        <section className='post__section'>\n                <h1 className='post__title title'>Working with POST request</h1>\n                <form className='post__form' onSubmit={handleSubmit(onSubmit)}>\n                    <div className='error'>  {errors?.name && <p className='not__valid__input'>{errors?.name?.message}</p>}</div>\n                    <input\n                        {...register('name', {\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 12,\n                                message: 'MaxLength 12 elements'\n                            },\n                            pattern: {\n                                value: /^([а-яёА-ЯË]{1,23}|[a-zA-Z]{1,12})$/,\n                                message: 'Name must contain only liters'\n                            }\n                        })}\n                        name='name'\n                        className='input__validation'\n                        type='name'\n                        placeholder='Your name'\n                    />\n                    <div className='error'>  {errors?.email && <p className='not__valid__input'>{errors?.email?.message}</p>}</div>\n                    <input\n                        {...register('email', {\n                            required: 'The string must not be empty',\n                            pattern: {\n                                value: /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n                                message: 'Not valid email'\n                            }\n                        })}\n                        name='email'\n                        className='input__validation'\n                        type='email'\n                        placeholder='Email'\n                    />\n                    <div className='error'>Error</div>\n                    ^\\+[0-9]{3}\\s\\((\\d+)\\)\\d{3}\\d{2}\\d{2}\n                    <input\n                        {...register('phone', {\n                            required: 'The string must not be empty',\n                            pattern: {\n                                value: /^\\+[0-9]{3}\\s\\((\\d+)\\)\\d{3}\\d{2}\\d{2}/g,\n                                message: 'Not valid phone'\n                            }\n                        })}\n                        className='input__validation' type='phone' placeholder='Phone'/>\n                    <p className='num__example'>+38 (XXX) XXX - XX - XX</p>\n                    <p className='select__position'>Select your position</p>\n                    <div>\n                        <input className='radio__btn' {...register(\"radio\")} type=\"radio\" value=\"Frontend developer\"/>\n                        <label className='radio__label'>Frontend developer</label>\n                    </div>\n                    <div>\n                        <input className='radio__btn'  {...register(\"radio\")} type=\"radio\" value=\"Backend developer\"/>\n                        <label className='radio__label'>Frontend developer</label>\n                    </div>\n                    <div>\n                        <input className='radio__btn'  {...register(\"radio\")} type=\"radio\" value=\"Designer\"/>\n                        <label className='radio__label'>Designer</label>\n                    </div>\n                    <div>\n                        <input className='radio__btn'  {...register(\"radio\")} type=\"radio\" value=\"QA\"/>\n                        <label className='radio__label'>QA</label>\n                    </div>\n                    <input className='input__validation' type='file' name='picture'/>\n                    <MyButton type='submit'>submit</MyButton>\n                </form>\n        </section>\n    );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}