{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './../../App.scss';\nimport './Post.scss';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { FormControlLabel, Radio, RadioGroup, Tooltip } from \"@mui/material\";\nimport MyButton from \"../UI/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  var _hiddenFileInput$curr, _hiddenFileInput$curr2;\n\n  let [positions, setPosition] = useState([]);\n  let hiddenFileInput = useRef(null);\n  let nameUploadFile = hiddenFileInput === null || hiddenFileInput === void 0 ? void 0 : (_hiddenFileInput$curr = hiddenFileInput.current) === null || _hiddenFileInput$curr === void 0 ? void 0 : (_hiddenFileInput$curr2 = _hiddenFileInput$curr.files[0]) === null || _hiddenFileInput$curr2 === void 0 ? void 0 : _hiddenFileInput$curr2.name;\n  let toggleUploadFile = nameUploadFile ? props.sliceText(nameUploadFile) : 'UploadFile';\n  const {\n    control,\n    formState: {\n      errors,\n      isValid\n    },\n    reset,\n    handleSubmit\n  } = useForm({\n    mode: 'all'\n  });\n  let token = localStorage.getItem('token');\n  useEffect(() => {\n    fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions').then(response => response.json()).then(data => setPosition(data.positions));\n  }, []);\n\n  const setUser = async data => {\n    console.log(data);\n    const formData = new FormData();\n    formData.append('name', data.name);\n    formData.append('phone', data.phone);\n    formData.append('position_id', data.position_id);\n    formData.append('email', data.email);\n    formData.append('photo', data.photo);\n    await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Token': token\n      }\n    }).then(response => response).then(data => console.log(data)).then(e => console.log(e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"register\",\n    className: \"post__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post__title title\",\n        children: \"Working with POST request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(setUser),\n        className: \"form_submit\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '104px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            rules: {\n              required: 'The string must not be empty',\n              minLength: {\n                value: 2,\n                message: 'MinLength 2 elements'\n              },\n              maxLength: {\n                value: 60,\n                message: 'MaxLength 60 elements'\n              }\n            },\n            render: _ref => {\n              var _errors$name;\n\n              let {\n                field: {\n                  value,\n                  onChange\n                }\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: value,\n                onChange: onChange,\n                placeholder: \"Your name\",\n                label: \"Name\",\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.name) && (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '104px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            rules: {\n              required: 'The string must not be empty',\n              minLength: {\n                value: 2,\n                message: 'MinLength 2 elements'\n              },\n              maxLength: {\n                value: 100,\n                message: 'MaxLength 100 elements'\n              },\n              pattern: {\n                value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                message: 'Not valid email'\n              }\n            },\n            render: _ref2 => {\n              var _errors$email;\n\n              let {\n                field: {\n                  value,\n                  onChange\n                }\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: value,\n                onChange: onChange,\n                placeholder: \"Your email\",\n                label: \"Email\",\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.email) && (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '104px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"phone\",\n            control: control,\n            rules: {\n              required: 'The string must not be empty',\n              pattern: {\n                value: /^[\\+]{0,1}380([0-9]{9})$/,\n                message: 'Not valid phone'\n              }\n            },\n            render: _ref3 => {\n              var _errors$phone;\n\n              let {\n                field: {\n                  value,\n                  onChange\n                }\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: value,\n                onChange: onChange,\n                placeholder: \"Your phone\",\n                label: \"Phone\",\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.phone) && (errors === null || errors === void 0 ? void 0 : (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"num__example\",\n            children: \"+38 (XXX) XXX - XX - XX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"position_id\",\n            control: control,\n            render: _ref4 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                }\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: value,\n                onChange: onChange,\n                children: positions.map(position => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: position.id,\n                  label: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"radio__label\",\n                    children: position.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 48\n                  }, this),\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 50\n                  }, this)\n                }, position.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"photo\",\n            control: control,\n            rules: {\n              required: 'Please add photo'\n            },\n            render: _ref5 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                }\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-file__block\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"upload-btn\",\n                  onClick: () => hiddenFileInput.current.click(),\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"photo\",\n                  type: \"file\",\n                  ref: hiddenFileInput,\n                  onChange: onChange,\n                  style: {\n                    display: 'none'\n                  },\n                  value: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  arrow: true,\n                  title: nameUploadFile,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"upload-file__name\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: 'black'\n                      },\n                      children: toggleUploadFile\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 68\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '100px'\n          },\n          children: /*#__PURE__*/_jsxDEV(MyButton, {\n            disabled: !isValid,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"qF2Y5COxjEJcpQFUcJkQjUCjZ1s=\", false, function () {\n  return [useForm];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx"],"names":["React","useEffect","useRef","useState","useForm","Controller","Box","TextField","FormControlLabel","Radio","RadioGroup","Tooltip","MyButton","Post","props","positions","setPosition","hiddenFileInput","nameUploadFile","current","files","name","toggleUploadFile","sliceText","control","formState","errors","isValid","reset","handleSubmit","mode","token","localStorage","getItem","fetch","then","response","json","data","setUser","console","log","formData","FormData","append","phone","position_id","email","photo","method","body","headers","e","height","required","minLength","value","message","maxLength","field","onChange","pattern","position","marginBottom","map","id","click","display","color"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './../../App.scss'\nimport './Post.scss'\nimport {useForm, Controller} from \"react-hook-form\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport {FormControlLabel, Radio, RadioGroup, Tooltip} from \"@mui/material\";\nimport MyButton from \"../UI/MyButton\";\n\n\nconst Post = (props) => {\n\n    let [positions, setPosition] = useState([])\n    let hiddenFileInput = useRef(null)\n    let nameUploadFile = hiddenFileInput?.current?.files[0]?.name;\n    let toggleUploadFile = nameUploadFile ? props.sliceText(nameUploadFile) : 'UploadFile'\n    const {control, formState: {errors, isValid}, reset, handleSubmit} = useForm({mode: 'all'})\nlet token = localStorage.getItem('token')\n    useEffect(() => {\n        fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions')\n            .then(response => response.json())\n            .then(data => setPosition(data.positions))\n    }, [])\n\n\n    const setUser = async (data) => {\n        console.log(data)\n        const formData = new FormData()\n        formData.append('name', data.name)\n        formData.append('phone', data.phone)\n        formData.append('position_id', data.position_id)\n        formData.append('email', data.email)\n        formData.append('photo', data.photo)\n\n        await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Token': token\n            },\n        })\n            .then((response) => response)\n            .then(data => console.log(data))\n            .then(e => console.log(e))\n    }\n\n    return (\n        <section id='register' className='post__section'>\n            <div className='container'>\n                <h1 className='post__title title'>Working with POST request</h1>\n                <form onSubmit={handleSubmit(setUser)} className='form_submit'>\n                    <Box sx={{height: '104px'}}>\n                    <Controller\n                            name='name'\n                            control={control}\n                            rules={{\n                                required: 'The string must not be empty',\n                                minLength: {\n                                    value: 2,\n                                    message: 'MinLength 2 elements'\n                                },\n                                maxLength: {\n                                    value: 60,\n                                    message: 'MaxLength 60 elements'\n                                }\n                            }}\n                            render={({field: {value, onChange}}) => (\n                                <TextField\n                                    fullWidth={true}\n                                    value={value}\n                                    onChange={onChange}\n                                    placeholder='Your name'\n                                    label=\"Name\"\n                                    helperText={errors?.name && errors?.name?.message}\n                                />\n                            )}\n                        />\n                    </Box>\n                    <Box sx={{height: '104px'}}>\n                        <Controller\n                        name='email'\n                        control={control}\n                        rules={{\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 100,\n                                message: 'MaxLength 100 elements'\n                            },\n                            pattern: {\n                                value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                                message: 'Not valid email'\n                            }\n                        }}\n                        render={({field: {value, onChange}}) => (\n                            <TextField\n                                fullWidth={true}\n                                value={value}\n                                onChange={onChange}\n                                placeholder='Your email'\n                                label=\"Email\"\n                                helperText={errors?.email && errors?.email?.message}\n                            />\n                        )}\n                    />\n                    </Box>\n                        <Box sx={{height: '104px', position: 'relative'}}>\n                    <Controller\n                        name='phone'\n                        control={control}\n                        rules={{\n                            required: 'The string must not be empty',\n                            pattern: {\n                                value: /^[\\+]{0,1}380([0-9]{9})$/,\n                                message: 'Not valid phone',\n\n                            }\n                        }}\n                        render={({field: {value, onChange}}) => (\n                            <TextField\n                                fullWidth={true}\n                                value={value}\n                                onChange={onChange}\n                                placeholder='Your phone'\n                                label=\"Phone\"\n                                helperText={errors?.phone && errors?.phone?.message}\n                            />\n                        )}\n                    />\n                            <p className='num__example'>+38 (XXX) XXX - XX - XX</p>\n                        </Box>\n                    <Box sx={{marginBottom: '50px'}}>\n                    <Controller\n                        name='position_id'\n                        control={control}\n                        render={({field: {onChange, value}}) => (\n                            <RadioGroup value={value} onChange={onChange}\n                            >\n\n                                {positions.map(position => (\n                                    <FormControlLabel\n\n                                        key={position.id}\n                                        value={position.id}\n                                        label={<p className='radio__label'>{position.name}</p>}\n                                        control={<Radio/>}/>))}\n                            </RadioGroup>\n                        )}\n                    />\n                    </Box>\n                    <Box sx={{marginBottom: '50px'}}>\n                    <Controller\n                        name='photo'\n                        control={control}\n                        rules={{\n                            required: 'Please add photo'\n                        }}\n                        render={({field: {onChange, value}}) => (\n                            <div className='upload-file__block'>\n                                <button className='upload-btn' onClick={() => hiddenFileInput.current.click()}>\n                                    Upload\n                                </button>\n                                <input\n                                    name=\"photo\"\n                                    type='file'\n                                    ref={hiddenFileInput}\n                                    onChange={onChange}\n                                    style={{display: 'none'}}\n                                    value={value}\n                                />\n                                <Tooltip arrow title={nameUploadFile}>\n                                <div className='upload-file__name'><div style={{color: 'black'}}>{toggleUploadFile}</div></div>\n                                </Tooltip>\n                            </div>\n\n                        )}\n                    />\n                    </Box>\n                <Box sx={{marginBottom: '100px'}}>\n                    <MyButton disabled={!isValid} type='submit'>Submit</MyButton>\n            </Box>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}