{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './../../App.scss';\nimport './Post.scss';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { FormControlLabel, Radio, RadioGroup, Tooltip } from \"@mui/material\";\nimport MyButton from \"../UI/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  var _hiddenFileInput$curr, _hiddenFileInput$curr2;\n\n  let [positions, setPosition] = useState([]);\n  let [activePosition, setActivePosition] = useState(1);\n  let hiddenFileInput = useRef(null);\n  const {\n    control,\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    reset,\n    handleSubmit\n  } = useForm({\n    mode: 'all'\n  });\n  let token = localStorage.getItem('token');\n  useEffect(() => {\n    fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions').then(response => response.json()).then(data => setPosition(data.positions));\n  }, []);\n\n  const handleChange = event => {\n    const fileUploaded = event.target.files[0];\n    console.log(fileUploaded);\n  };\n\n  let nameUploadFile = hiddenFileInput === null || hiddenFileInput === void 0 ? void 0 : (_hiddenFileInput$curr = hiddenFileInput.current) === null || _hiddenFileInput$curr === void 0 ? void 0 : (_hiddenFileInput$curr2 = _hiddenFileInput$curr.files[0]) === null || _hiddenFileInput$curr2 === void 0 ? void 0 : _hiddenFileInput$curr2.name;\n  let toggleUploadFile = nameUploadFile ? props.sliceText(nameUploadFile) : 'UploadFile';\n\n  const setUser = async data => {\n    console.log(data);\n    const formData = new FormData();\n    let position_id = Number.parseInt(data.position_id);\n    formData.append('name', data.name);\n    formData.append('phone', data.phone);\n    formData.append('position_id', position_id);\n    formData.append('email', data.email);\n    formData.append('photo', data.photo);\n    await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Token': token\n      }\n    }).then(response => response).then(data => console.log(data)).then(e => console.log(e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"register\",\n    className: \"post__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post__title title\",\n        children: \"Working with POST request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(setUser),\n        className: \"form_submit\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '104px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            rules: {\n              required: 'The string must not be empty',\n              minLength: {\n                value: 2,\n                message: 'MinLength 2 elements'\n              },\n              maxLength: {\n                value: 60,\n                message: 'MaxLength 60 elements'\n              }\n            },\n            render: _ref => {\n              var _errors$name;\n\n              let {\n                field: {\n                  value,\n                  onChange\n                }\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: value,\n                onChange: onChange,\n                placeholder: \"Your name\",\n                label: \"Name\",\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.name) && (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '104px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            rules: {\n              required: 'The string must not be empty',\n              minLength: {\n                value: 2,\n                message: 'MinLength 2 elements'\n              },\n              maxLength: {\n                value: 100,\n                message: 'MaxLength 100 elements'\n              },\n              pattern: {\n                value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                message: 'Not valid email'\n              }\n            },\n            render: _ref2 => {\n              var _errors$email;\n\n              let {\n                field: {\n                  value,\n                  onChange\n                }\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: value,\n                onChange: onChange,\n                placeholder: \"Your email\",\n                label: \"Email\",\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.email) && (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            height: '104px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: \"phone\",\n            control: control,\n            rules: {\n              required: 'The string must not be empty',\n              pattern: {\n                value: /^[\\+]{0,1}380([0-9]{9})$/,\n                message: 'Not valid phone'\n              }\n            },\n            render: _ref3 => {\n              var _errors$phone;\n\n              let {\n                field: {\n                  value,\n                  onChange\n                }\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: value,\n                onChange: onChange,\n                placeholder: \"Your phone\",\n                label: \"Phone\",\n                helperText: (errors === null || errors === void 0 ? void 0 : errors.phone) && (errors === null || errors === void 0 ? void 0 : (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"num__example\",\n            children: \"+38 (XXX) XXX - XX - XX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '50px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"position_id\",\n            control: control,\n            render: _ref4 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                }\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: activePosition,\n                onChange: event => setActivePosition(event.target.value),\n                children: positions.map(position => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: position.id,\n                  label: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"radio__label\",\n                    children: position.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 48\n                  }, this),\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 50\n                  }, this)\n                }, position.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-file__block\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"upload-btn\",\n              onClick: () => hiddenFileInput.current.click(),\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            arrow: true,\n            title: nameUploadFile,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-file__name\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'black'\n                },\n                children: toggleUploadFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: hiddenFileInput,\n            ...register('photo', {\n              required: 'Please add photo'\n            }),\n            className: \"input__load__file\",\n            onChange: handleChange,\n            type: \"file\",\n            name: \"photo\",\n            accept: \".jpg, .jpeg\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginBottom: '100px'\n          },\n          children: /*#__PURE__*/_jsxDEV(MyButton, {\n            disabled: !isValid,\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"E/c8paswmUiEo7tohXU6Ief8Fds=\", false, function () {\n  return [useForm];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/post-block/Post.jsx"],"names":["React","useEffect","useRef","useState","useForm","Controller","Box","TextField","FormControlLabel","Radio","RadioGroup","Tooltip","MyButton","Post","props","positions","setPosition","activePosition","setActivePosition","hiddenFileInput","control","register","formState","errors","isValid","reset","handleSubmit","mode","token","localStorage","getItem","fetch","then","response","json","data","handleChange","event","fileUploaded","target","files","console","log","nameUploadFile","current","name","toggleUploadFile","sliceText","setUser","formData","FormData","position_id","Number","parseInt","append","phone","email","photo","method","body","headers","e","height","required","minLength","value","message","maxLength","field","onChange","pattern","position","marginBottom","map","id","click","color","display"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport './../../App.scss'\nimport './Post.scss'\nimport {useForm, Controller} from \"react-hook-form\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport {FormControlLabel, Radio, RadioGroup, Tooltip} from \"@mui/material\";\nimport MyButton from \"../UI/MyButton\";\n\n\nconst Post = (props) => {\n\n    let [positions, setPosition] = useState([]);\n    let [activePosition, setActivePosition] = useState(1)\n\n    let hiddenFileInput = useRef(null)\n    const {control, register, formState: {errors, isValid}, reset, handleSubmit} = useForm({mode: 'all'})\n    let token = localStorage.getItem('token')\n\n\n    useEffect(() => {\n        fetch('https://frontend-test-assignment-api.abz.agency/api/v1/positions')\n            .then(response => response.json())\n            .then(data => setPosition(data.positions))\n    }, [])\n    const handleChange = event => {\n        const fileUploaded = event.target.files[0];\n\n        console.log(fileUploaded)\n    };\n    let nameUploadFile = hiddenFileInput?.current?.files[0]?.name;\n    let toggleUploadFile = nameUploadFile ? props.sliceText(nameUploadFile) : 'UploadFile'\n    const setUser = async (data) => {\n        console.log(data)\n        const formData = new FormData()\n        let position_id = Number.parseInt(data.position_id)\n        formData.append('name', data.name)\n        formData.append('phone', data.phone)\n        formData.append('position_id', position_id)\n        formData.append('email', data.email)\n        formData.append('photo', data.photo)\n\n        await fetch(`https://frontend-test-assignment-api.abz.agency/api/v1/users`, {\n            method: 'POST',\n            body: formData,\n            headers: {\n                'Token': token\n            },\n        })\n            .then((response) => response)\n            .then(data => console.log(data))\n            .then(e => console.log(e))\n    }\n\n    return (\n        <section id='register' className='post__section'>\n            <div className='container'>\n                <h1 className='post__title title'>Working with POST request</h1>\n                <form onSubmit={handleSubmit(setUser)} className='form_submit'>\n                    <Box sx={{height: '104px'}}>\n                    <Controller\n                            name='name'\n                            control={control}\n                            rules={{\n                                required: 'The string must not be empty',\n                                minLength: {\n                                    value: 2,\n                                    message: 'MinLength 2 elements'\n                                },\n                                maxLength: {\n                                    value: 60,\n                                    message: 'MaxLength 60 elements'\n                                }\n                            }}\n                            render={({field: {value, onChange}}) => (\n                                <TextField\n                                    fullWidth={true}\n                                    value={value}\n                                    onChange={onChange}\n                                    placeholder='Your name'\n                                    label=\"Name\"\n                                    helperText={errors?.name && errors?.name?.message}\n                                />\n                            )}\n                        />\n                    </Box>\n                    <Box sx={{height: '104px'}}>\n                        <Controller\n                        name='email'\n                        control={control}\n                        rules={{\n                            required: 'The string must not be empty',\n                            minLength: {\n                                value: 2,\n                                message: 'MinLength 2 elements'\n                            },\n                            maxLength: {\n                                value: 100,\n                                message: 'MaxLength 100 elements'\n                            },\n                            pattern: {\n                                value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                                message: 'Not valid email'\n                            }\n                        }}\n                        render={({field: {value, onChange}}) => (\n                            <TextField\n                                fullWidth={true}\n                                value={value}\n                                onChange={onChange}\n                                placeholder='Your email'\n                                label=\"Email\"\n                                helperText={errors?.email && errors?.email?.message}\n                            />\n                        )}\n                    />\n                    </Box>\n                        <Box sx={{height: '104px', position: 'relative'}}>\n                    <Controller\n                        name='phone'\n                        control={control}\n                        rules={{\n                            required: 'The string must not be empty',\n                            pattern: {\n                                value: /^[\\+]{0,1}380([0-9]{9})$/,\n                                message: 'Not valid phone',\n\n                            }\n                        }}\n                        render={({field: {value, onChange}}) => (\n                            <TextField\n                                fullWidth={true}\n                                value={value}\n                                onChange={onChange}\n                                placeholder='Your phone'\n                                label=\"Phone\"\n                                helperText={errors?.phone && errors?.phone?.message}\n                            />\n                        )}\n                    />\n                            <p className='num__example'>+38 (XXX) XXX - XX - XX</p>\n                        </Box>\n                    <Box sx={{marginBottom: '50px'}}>\n                    <Controller\n                        name='position_id'\n                        control={control}\n                        render={({field: {onChange, value}}) => (\n                            <RadioGroup value={activePosition} onChange={(event) => setActivePosition(event.target.value)}\n                            >\n\n                                {positions.map(position => (\n                                    <FormControlLabel\n                                        key={position.id}\n                                        value={position.id}\n                                        label={<p className='radio__label'>{position.name}</p>}\n                                        control={<Radio/>}/>))}\n                            </RadioGroup>\n                        )}\n                    />\n                    </Box>\n                    <Box sx={{marginBottom: '50px'}}>\n                        <div className='upload-file__block'>\n                            <button className='upload-btn' onClick={() => hiddenFileInput.current.click()}>\n                                Upload\n                            </button>\n                        </div>\n                        <Tooltip arrow title={nameUploadFile}>\n                            <div className='upload-file__name'>\n                                <div style={{color: 'black'}}>{toggleUploadFile}</div>\n                            </div>\n                        </Tooltip>\n                        <input\n                            ref={hiddenFileInput}\n                            {...register('photo', {\n                                    required: 'Please add photo'\n                                })}\n                                className='input__load__file'\n                            onChange={handleChange}\n                            type='file'\n                            name='photo'\n                            accept=\".jpg, .jpeg\"\n                            style={{display: 'none'}}\n                        />\n                        {/*<div className='upload-file__block'>*/}\n                        {/*    <button className='upload-btn' onClick={ async () => hiddenFileInput.current.click()}>*/}\n                        {/*        Upload*/}\n                        {/*    </button>*/}\n                        {/*    <input*/}\n                        {/*        {...register('photo', {*/}\n                        {/*            required: 'Please add photo'*/}\n                        {/*        })}*/}\n                        {/*        className='input__load__file'*/}\n                        {/*        ref={hiddenFileInput}*/}\n                        {/*        // style={{display: 'none'}}*/}\n\n                        {/*        type='file' name='photo'  accept=\".jpg, .jpeg\"/>*/}\n                        {/*    </div>*/}\n                    {/*<Controller*/}\n                    {/*    name='photo'*/}\n                    {/*    control={control}*/}\n                    {/*    rules={{*/}\n                    {/*        required: 'Please add photo'*/}\n                    {/*    }}*/}\n                    {/*    render={({field: {onChange, value,ref}}) => (*/}\n                    {/*        <div className='upload-file__block'>*/}\n                    {/*            <button className='upload-btn' onClick={() => hiddenFileInput.current.click()}>*/}\n                    {/*                Upload*/}\n                    {/*            </button>*/}\n                    {/*            <input*/}\n\n                    {/*                type='file'*/}\n                    {/*                name='photo'*/}\n                    {/*                ref={hiddenFileInput}*/}\n                    {/*                value={value}*/}\n                    {/*                onChange={handleChange}*/}\n                    {/*                style={{display: 'none'}}*/}\n\n                    {/*            />*/}\n                    {/*            <Tooltip arrow title={nameUploadFile}>*/}\n                    {/*            <div className='upload-file__name'><div style={{color: 'black'}}>{toggleUploadFile}</div></div>*/}\n                    {/*            </Tooltip>*/}\n                    {/*        </div>*/}\n                    {/*    )}*/}\n                    {/*/>*/}\n                    </Box>\n                <Box sx={{marginBottom: '100px'}}>\n                    <MyButton disabled={!isValid} type='submit'>Submit</MyButton>\n            </Box>\n                </form>\n            </div>\n        </section>\n    );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}