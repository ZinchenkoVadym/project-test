{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/resume-test-project/src/components/authorization/authorization.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { CircularProgress, FormControlLabel, Radio, RadioGroup } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport './../../App.scss';\nimport './authorization.scss';\nimport MyButton from '../UI/myButton';\nimport apiRequests from '../../api/apiRequests';\nimport SuccessImage from '../svg-componets/successImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Authorization = props => {\n  _s();\n\n  let [positions, setPositions] = useState([]);\n  let [registerSuccess, setRegisterSuccess] = useState(false);\n  let [loaderRegister, setLoaderRegister] = useState(false);\n  let [error, setError] = useState('');\n  const {\n    control,\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      position_id: 1\n    }\n  });\n  useEffect(() => {\n    apiRequests.getPositions().then(data => setPositions(data.positions));\n  }, []);\n\n  const fromData = data => {\n    const formData = new FormData();\n    formData.append('name', data.name);\n    formData.append('phone', data.phone);\n    formData.append('position_id', data.position_id);\n    formData.append('email', data.email);\n    formData.append('photo', data.photo[0]);\n    return formData;\n  };\n\n  const setUser = async data => {\n    let formData = fromData(data);\n    setLoaderRegister(true);\n    props.setUserOpen(false);\n\n    try {\n      const responseToken = await apiRequests.getToken();\n      if (!responseToken.success) return;\n      let token = responseToken.token;\n      const user = await apiRequests.setUser(formData, token);\n\n      if (!user.success) {\n        setError(user.message);\n        setLoaderRegister(false);\n        props.setLoader(false);\n        return;\n      }\n\n      setLoaderRegister(false);\n      props.setLoader(true);\n      const users = await apiRequests.getUsers(1);\n\n      if (!users.success) {\n        setError(users.message);\n        setLoaderRegister(false);\n        props.setLoader(false);\n        return;\n      }\n\n      props.setUsers(users.users);\n      props.setPageNum(1);\n      props.setLoader(false);\n      setRegisterSuccess(true);\n    } catch (e) {\n      setError('Something went wrong');\n      setLoaderRegister(false);\n      props.setLoader(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"register\",\n    className: \"authorization__section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"authorization__container container\",\n      children: registerSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success__register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"User successfully registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(SuccessImage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"authorization__title title\",\n          children: \"Working with POST request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(setUser),\n          className: \"authorization__form\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '104px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"name\",\n              control: control,\n              rules: {\n                required: 'The string must not be empty',\n                minLength: {\n                  value: 2,\n                  message: 'MinLength 2 elements'\n                },\n                maxLength: {\n                  value: 60,\n                  message: 'MaxLength 60 elements'\n                }\n              },\n              render: _ref => {\n                var _errors$name;\n\n                let {\n                  field: {\n                    value,\n                    onChange\n                  }\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors === null || errors === void 0 ? void 0 : errors.name,\n                  fullWidth: true,\n                  value: value,\n                  onChange: onChange,\n                  placeholder: \"Your name\",\n                  label: \"Name\",\n                  helperText: (errors === null || errors === void 0 ? void 0 : errors.name) && (errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '104px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"email\",\n              control: control,\n              rules: {\n                required: 'The string must not be empty',\n                minLength: {\n                  value: 2,\n                  message: 'MinLength 2 elements'\n                },\n                maxLength: {\n                  value: 100,\n                  message: 'MaxLength 100 elements'\n                },\n                pattern: {\n                  value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                  message: 'Not valid email'\n                }\n              },\n              render: _ref2 => {\n                var _errors$email;\n\n                let {\n                  field: {\n                    value,\n                    onChange\n                  }\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors === null || errors === void 0 ? void 0 : errors.email,\n                  fullWidth: true,\n                  value: value,\n                  onChange: onChange,\n                  placeholder: \"Your email\",\n                  label: \"Email\",\n                  helperText: (errors === null || errors === void 0 ? void 0 : errors.email) && (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: '104px',\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: \"phone\",\n              control: control,\n              rules: {\n                required: 'The string must not be empty',\n                pattern: {\n                  value: /^[\\+]{0,1}380([0-9]{9})$/,\n                  message: 'Not valid phone'\n                }\n              },\n              render: _ref3 => {\n                var _errors$phone;\n\n                let {\n                  field: {\n                    value,\n                    onChange\n                  }\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(TextField, {\n                  error: errors === null || errors === void 0 ? void 0 : errors.phone,\n                  fullWidth: true,\n                  value: value,\n                  onChange: onChange,\n                  placeholder: \"Your phone\",\n                  label: \"Phone\",\n                  helperText: (errors === null || errors === void 0 ? void 0 : errors.phone) && (errors === null || errors === void 0 ? void 0 : (_errors$phone = errors.phone) === null || _errors$phone === void 0 ? void 0 : _errors$phone.message)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"phone-number__example\",\n              children: \"+38 (XXX) XXX - XX - XX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginBottom: '50px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"position_id\",\n              control: control,\n              render: _ref4 => {\n                let {\n                  field: {\n                    value,\n                    onChange\n                  }\n                } = _ref4;\n                return /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  value: value,\n                  onChange: onChange,\n                  children: positions.map(position => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: position.id,\n                    label: position.name,\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 62\n                    }, this)\n                  }, position.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginBottom: '50px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload__block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload__btn\",\n                children: [\"Upload\", /*#__PURE__*/_jsxDEV(\"input\", { ...register('photo', {\n                    required: 'Please add photo'\n                  }),\n                  className: \"upload__input\",\n                  type: \"file\",\n                  name: \"photo\",\n                  accept: \".jpg, .jpeg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-file__name\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Upload file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              marginBottom: '100px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"show-btn__container\",\n              children: [/*#__PURE__*/_jsxDEV(MyButton, {\n                disabled: !isValid,\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loader\",\n                children: loaderRegister ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  sx: {\n                    width: '10px',\n                    height: '10px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 51\n                }, this) : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Authorization, \"uyfxUrge4v8swA2vnYqy21RzSv8=\", false, function () {\n  return [useForm];\n});\n\n_c = Authorization;\nexport default Authorization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authorization\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/resume-test-project/src/components/authorization/authorization.jsx"],"names":["React","useEffect","useState","useForm","Controller","CircularProgress","FormControlLabel","Radio","RadioGroup","Box","TextField","MyButton","apiRequests","SuccessImage","Authorization","props","positions","setPositions","registerSuccess","setRegisterSuccess","loaderRegister","setLoaderRegister","error","setError","control","register","formState","errors","isValid","handleSubmit","mode","defaultValues","position_id","getPositions","then","data","fromData","formData","FormData","append","name","phone","email","photo","setUser","setUserOpen","responseToken","getToken","success","token","user","message","setLoader","users","getUsers","setUsers","setPageNum","e","height","required","minLength","value","maxLength","field","onChange","pattern","position","marginBottom","map","id","width"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useForm, Controller} from 'react-hook-form';\nimport {CircularProgress, FormControlLabel, Radio, RadioGroup} from '@mui/material';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport './../../App.scss'\nimport './authorization.scss'\nimport MyButton from '../UI/myButton';\nimport apiRequests from '../../api/apiRequests';\nimport SuccessImage from '../svg-componets/successImage';\n\n\nconst Authorization = (props) => {\n\n    let [positions, setPositions] = useState([]);\n    let [registerSuccess, setRegisterSuccess] = useState(false);\n    let [loaderRegister, setLoaderRegister] = useState(false);\n    let [error, setError] = useState('');\n\n    const {control, register, formState: {errors, isValid}, handleSubmit} = useForm({\n        mode: \"all\",\n        defaultValues: {\n            position_id: 1,\n        }\n    });\n\n    useEffect(() => {\n        apiRequests.getPositions()\n            .then(data => setPositions(data.positions));\n    }, []);\n\n\n    const fromData = (data) => {\n        const formData = new FormData();\n        formData.append('name', data.name);\n        formData.append('phone', data.phone);\n        formData.append('position_id', data.position_id);\n        formData.append('email', data.email);\n        formData.append('photo', data.photo[0]);\n        return formData;\n    }\n\n\n    const setUser = async (data) => {\n\n        let formData = fromData(data);\n        setLoaderRegister(true);\n        props.setUserOpen(false);\n\n        try {\n            const responseToken = await apiRequests.getToken();\n            if (!responseToken.success) return\n            let token = responseToken.token;\n            const user = await apiRequests.setUser(formData, token);\n            if (!user.success) {\n                setError(user.message);\n                setLoaderRegister(false);\n                props.setLoader(false);\n                return\n            }\n            setLoaderRegister(false);\n            props.setLoader(true);\n            const users = await apiRequests.getUsers(1);\n            if (!users.success) {\n                setError(users.message);\n                setLoaderRegister(false);\n                props.setLoader(false);\n                return\n            }\n            props.setUsers(users.users);\n            props.setPageNum((1));\n            props.setLoader(false);\n            setRegisterSuccess(true);\n        } catch (e) {\n            setError('Something went wrong');\n            setLoaderRegister(false);\n            props.setLoader(false);\n        }\n    }\n\n    return (\n        <section id='register' className='authorization__section'>\n            <div className='authorization__container container'>\n                {registerSuccess\n                    ? <div className='success__register'>\n                        <h1 className='title'>User successfully registered</h1>\n                        <SuccessImage/>\n                    </div>\n                    : <>\n                        <h1 className='authorization__title title'>Working with POST request</h1>\n                        <form onSubmit={handleSubmit(setUser)} className='authorization__form'>\n                            <Box sx={{height: '104px'}}>\n                                <Controller\n                                    name='name'\n                                    control={control}\n                                    rules={{\n                                        required: 'The string must not be empty',\n                                        minLength: {\n                                            value: 2,\n                                            message: 'MinLength 2 elements'\n                                        },\n                                        maxLength: {\n                                            value: 60,\n                                            message: 'MaxLength 60 elements'\n                                        }\n                                    }}\n                                    render={({field: {value, onChange}}) => (\n                                        <TextField\n                                            error={errors?.name}\n                                            fullWidth={true}\n                                            value={value}\n                                            onChange={onChange}\n                                            placeholder='Your name'\n                                            label=\"Name\"\n                                            helperText={errors?.name && errors?.name?.message}\n                                        />\n                                    )}\n                                />\n                            </Box>\n                            <Box sx={{height: '104px'}}>\n                                <Controller\n                                    name='email'\n                                    control={control}\n                                    rules={{\n                                        required: 'The string must not be empty',\n                                        minLength: {\n                                            value: 2,\n                                            message: 'MinLength 2 elements'\n                                        },\n                                        maxLength: {\n                                            value: 100,\n                                            message: 'MaxLength 100 elements'\n                                        },\n                                        pattern: {\n                                            value: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/,\n                                            message: 'Not valid email'\n                                        }\n                                    }}\n                                    render={({field: {value, onChange}}) => (\n                                        <TextField\n                                            error={errors?.email}\n                                            fullWidth={true}\n                                            value={value}\n                                            onChange={onChange}\n                                            placeholder='Your email'\n                                            label='Email'\n                                            helperText={errors?.email && errors?.email?.message}\n                                        />\n                                    )}\n\n                                />\n                            </Box>\n                            <Box sx={{height: '104px', position: 'relative'}}>\n                                <Controller\n                                    name='phone'\n                                    control={control}\n                                    rules={{\n                                        required: 'The string must not be empty',\n                                        pattern: {\n                                            value: /^[\\+]{0,1}380([0-9]{9})$/,\n                                            message: 'Not valid phone',\n                                        }\n                                    }}\n                                    render={({field: {value, onChange}}) => (\n                                        <TextField\n                                            error={errors?.phone}\n                                            fullWidth={true}\n                                            value={value}\n                                            onChange={onChange}\n                                            placeholder='Your phone'\n                                            label='Phone'\n                                            helperText={errors?.phone && errors?.phone?.message}\n                                        />\n                                    )}\n                                />\n                                <p className='phone-number__example'>+38 (XXX) XXX - XX - XX</p>\n                            </Box>\n                            <Box sx={{marginBottom: '50px'}}>\n                                <Controller\n                                    name='position_id'\n                                    control={control}\n                                    render={({field: {value, onChange}}) => (\n                                        <RadioGroup\n                                            value={value}\n                                            onChange={onChange}\n                                        >\n                                            {positions.map(position => (\n                                                <FormControlLabel\n                                                    key={position.id}\n                                                    value={position.id}\n                                                    label={position.name}\n                                                    control={<Radio/>}\n                                                />))}\n                                        </RadioGroup>\n                                    )}\n                                />\n                            </Box>\n                            <Box sx={{marginBottom: '50px'}}>\n                                <div className='upload__block'>\n                                    <label className='upload__btn'>\n                                        Upload\n                                        <input\n                                            {...register('photo', {\n                                                required: 'Please add photo'\n                                            })}\n                                            className='upload__input'\n                                            type='file'\n                                            name='photo'\n                                            accept=\".jpg, .jpeg\"\n                                        />\n                                    </label>\n                                    <div className='upload-file__name'>\n                                        <div>Upload file</div>\n                                    </div>\n                                </div>\n                            </Box>\n                            <div className='error'>{error}</div>\n                            <Box sx={{marginBottom: '100px'}}>\n\n                                <div className='show-btn__container'>\n                                    <MyButton disabled={!isValid} type='submit'>Submit</MyButton>\n                                    <span className='loader'>\n                                {loaderRegister ? <CircularProgress sx={{width: '10px', height: '10px'}}/> : ''}\n                            </span>\n                                </div>\n                            </Box>\n                        </form>\n                    </>\n                }\n            </div>\n        </section>\n    );\n};\n\nexport default Authorization;"]},"metadata":{},"sourceType":"module"}